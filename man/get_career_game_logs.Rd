% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_career_game_logs.R
\name{get_career_game_logs}
\alias{get_career_game_logs}
\title{Retrieve career batting game logs for players}
\usage{
get_career_game_logs(
  metadata_df,
  include_postseason = TRUE,
  split_postseason_result = TRUE,
  sleep_sec = 3,
  jitter_sec = 0.5,
  overwrite_cache = FALSE,
  compression = c("zstd", "snappy"),
  verbose = interactive()
)
}
\arguments{
\item{metadata_df}{A data frame with at least the columns:
`Name`, `From`, `To`, `PlayerID`, and `Country`.}

\item{include_postseason}{Logical, default `TRUE`. If `TRUE`, also scrape
postseason logs (one request per player).}

\item{split_postseason_result}{Logical, default `TRUE`. If `TRUE`, the return
value is a list per player, with separate `regular` and `postseason` tibbles.
If `FALSE`, only regular season data is returned as a combined tibble.}

\item{sleep_sec}{Number of seconds to wait between requests (to be polite).}

\item{jitter_sec}{Random jitter (uniform 0â€“`jitter_sec`) added to `sleep_sec`.}

\item{overwrite_cache}{Logical, default `FALSE`. If `TRUE`, forces re-download
even if data exists in the Parquet cache.}

\item{compression}{Compression algorithm for Parquet files.
One of `"zstd"` (default) or `"snappy"`.}

\item{verbose}{Logical, default `interactive()`. If `TRUE`, prints progress
messages during scraping and caching.}
}
\value{
If `split_postseason_result = TRUE`, a named list keyed by `PlayerID`, where each
element is itself a list with `$regular` and `$postseason` tibbles (or `NULL` if absent).
If `split_postseason_result = FALSE`, a single tibble combining all regular season logs.
}
\description{
Downloads and caches batting game logs from Baseball Reference for all players
in a given metadata data frame. Logs are saved to Parquet cache and also returned
as R objects. Supports both regular-season and postseason logs.
}
\examples{
\dontrun{
# Example metadata
players <- tibble::tibble(
  Name = c("Miguel Cabrera"),
  From = 2003, To = 2023,
  PlayerID = "cabremi01",
  Country = "Venezuela"
)

# Get logs (both reg + postseason, returned separately)
logs <- get_career_game_logs(players)

# Convert list of postseason logs into one tibble
post_tbl <- logs_list_to_tibble(logs, "postseason")
}

}
